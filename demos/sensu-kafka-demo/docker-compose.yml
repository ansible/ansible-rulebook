---
version: "3"

services:
  fake-app:
    image: quay.io/aizquier/fake-app:latest
    ports:
      - "5080:5080"

  zookeeper:
    image: mirror.gcr.io/confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: mirror.gcr.io/confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -vz broker 9092
      interval: 5s
      timeout: 3s
      retries: 20

  sensu-backend:
    image: mirror.gcr.io/sensu/sensu:latest
    command: sensu-backend start
    ports:
      - "3000:3000"
      - "8080:8080"
      - "8081:8081"
    environment:
      SENSU_BACKEND_CLUSTER_ADMIN_USERNAME: admin
      SENSU_BACKEND_CLUSTER_ADMIN_PASSWORD: admin
    healthcheck:
      test: wget -q -O- http://127.0.0.1:8080/health
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      broker:
        condition: service_healthy

  sensu-agent:
    image: mirror.gcr.io/sensu/sensu:latest
    command: >-
      sensu-agent start
    environment:
      SENSU_PASSWORD: admin
      SENSU_USER: admin
      SENSU_SUBSCRIPTIONS: webserver
      SENSU_API_HOST: localhost
      SENSU_BACKEND_URL: ws://sensu-backend:8081
    depends_on:
      sensu-backend:
        condition: service_healthy

  sensu-cli:
    image: ae-sensu-demo-cli
    build:
      context: ./sensu-cli
    environment:
      SENSU_API_URL: http://sensu-backend:8080
    command: >-
      sh -c  "sensuctl configure --username admin --password admin -n &&
      sensuctl asset add sensu/http-checks &&
      sensuctl asset add sensu/sensu-kafka-handler &&
      sensuctl create -f /sensu-assets/check.yml &&
      sensuctl create -f /sensu-assets/handler.yml"
    depends_on:
      sensu-backend:
        condition: service_healthy

  ansible-rulebook:
    image: ae-sensu-demo-ansible-rulebook
    build:
      context: ./ansible-rulebook
    command: bash -c "cd /data && ansible-rulebook --rulebook rules.yml -i inventory.yml"
    depends_on:
      sensu-backend:
        condition: service_healthy
      sensu-cli:
        condition: service_completed_successfully
