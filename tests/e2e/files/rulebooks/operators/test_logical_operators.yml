- name: Test logical operators
  hosts: all
  sources:
    - generic:
        event_delay: 0.05
        shutdown_after: "{{ DEFAULT_SHUTDOWN_AFTER }}"
        payload:
          - id: "Testcase #1"
            myint: 73
            mystring: "hello"
          - id: "Testcase #1"
            myint: 73
            mystring: "world"

          - id: "Testcase #2"
            environment: apac-production
            overload: 99.8
          - id: "Testcase #2"
            environment: staging
            overload: 101.9
          - id: "Testcase #2"
            environment: staging
            overload: 78.5
          - id: "Testcase #2"
            environment: lab-prod
            overload: 78.5

          - id: "Testcase #3"
            service: "backend"
            state: "restarting"
          - id: "Testcase #3"
            service: "backend"
            state: "shutdown"

          - id: "Testcase #4"
            mem: 784.0
            rc: null
            threads: 10
          - id: "Testcase #4"
            mem: 784.0
            rc: 2
            threads: 10
          - id: "Testcase #4"
            mem: 784.0
            rc: null
            threads: 3
          - id: "Testcase #4"
            mem: 854.3
            rc: 0
            threads: 10

          - id: "Testcase #5"
            alert: "down"
            appname: "backend"
            instance: "rc-api_1-stage"
          - id: "Testcase #5"
            alert: "up"
            appname: "backend"
            instance: "rc-api_1-stage"
          - id: "Testcase #5"
            alert: "down"
            appname: "redis"
            instance: "rc-api_1-stage"
          - id: "Testcase #5"
            alert: "down"
            appname: "redis"
            instance: "rc-api_1-prod"
          - id: "Testcase #5"
            alert: "up"
            appname: "redis"
            instance: "rc-api_1-prod"

          - id: "Testcase #6"
            nested: # match
              env: prod
            state: "down"
            type: warning
            cpus: 5
          - id: "Testcase #6"
            nested: # match
              env: prod
            state: "up"
            type: critical
            cpus: 5
          - id: "Testcase #6"
            nested: # match
              env: stage
            state: "unknown"
            type: critical
            cpus: 2
          - id: "Testcase #6"
            nested: # no match
              env: stage
            state: "unknown"
            type: warning
            cpus: 8
          - id: "Testcase #6"
            nested: # match
              env: stage
            state: "down"
            type: warning
            cpus: 2
          - id: "Testcase #6"
            nested: # no match
              env: stage
            state: "down"
            type: warning
            cpus: 6
          - id: "Testcase #6"
            nested: # no match
              env: stage
            state: "up"
            type: critical
            cpus: 6
          - id: "Testcase #7"
            device_type: "router"
            state: "unhealthy"
            bgp_state: null
          - id: "Testcase #7" # should not match
            device_type: "router"
            state: "healthy"
            bgp_state: "null"
          - id: "Testcase #8"
            device_type: "switch"
            tap_state: null
            span_state: "mirroring"


  rules:
    - name: "Testcase #1"
      condition: event.myint == 73 and event.mystring == "hello"
      action:
        debug:
          msg: "Testcase #01 passes"

    - name: "Testcase #2"
      condition: event.environment is regex(".*-prod(uction)?") or event.overload > 100
      action:
        debug:
          msg: "Testcase #02 passes"

    - name: "Testcase #3"
      condition: event.state == "restarting" and (event.service == "backend" or event.state == "shutdown")
      action:
        debug:
          msg: "Testcase #03 passes"

    - name: "Testcase #4"
      condition: (event.rc !=null and event.rc > 1 and event.rc < 127) or (event.mem > 512.0 and event.threads < 4)
      action:
        debug:
          msg: "Testcase #04 passes"

    - name: "Testcase #5"
      condition: >
        event.alert == "down"
        and (event.appname in ["backend", "frontend"] or event.instance is regex(".*-prod"))
      action:
        debug:
          msg: "Testcase #05 passes"

    - name: "Testcase #6"
      condition: >
        (event.state == "down" or event.type == "critical")
        and (event.nested.env == "prod" or event.cpus <= 4)
      action:
        debug:
          msg: "Testcase #06 passes"

    - name: "Testcase #7"
      condition: event.device_type == "router" and event.bgp_state == null
      action:
        debug:
          msg: "Testcase #07 passes"

    - name: "Testcase #8"
      condition: >
        event.device_type == "switch" and
        (event.tap_state == null or event.span_state == null)
      action:
        debug:
          msg: "Testcase #08 passes"
